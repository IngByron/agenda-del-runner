name: Deploy to Firebase Hosting (Production)

on:
  push:
    branches:
      - master  # Solo se despliega cuando haces push a la rama 'master' (producción)

permissions:
  contents: read
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Hacer checkout del código
      - uses: actions/checkout@v4

      # Paso 2: Configurar Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 22.13.1

      # Paso 3: Instalar dependencias
      - run: npm ci

      # Paso 4: Crear archivo .env con las claves de Firebase de producción
      - name: Set Firebase env variables for production
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env

      # Paso 5: Hacer el build del proyecto
      - run: npm run build

      # Paso 6: Desplegar a Firebase Hosting
      - name: Deploy to Firebase Hosting (Live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}  # Token de autenticación de GitHub
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AGENDA_DEL_RUNNER_TEST }}  # Cuenta de servicio Firebase
          projectId: agenda-del-runner-test  # ID de tu proyecto Firebase
          channelId: live  # Canal de despliegue a producción
